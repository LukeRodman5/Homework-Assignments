---------------------------------------------------------------------------------------------------------------
--
-- DROP - remove a table and all it's data from the database
--
-- Consider referential constraints - cannot drop a parent if it has dependents
--
--      DROP TABLE table-name             - Will fail if table does not exist or if it has dependents
--
--      DROP TABLE IF EXISTS table-name   - Will run whether table exists or not; will fail if table has dependents
--
--      DROP TABLE IF EXISTS table-name  CASCADE   - Will run whether table exists or not and whether has dependents or not
--
--
--  CREATE - define a table to the database manager
--
--       CREATE TABLE table-name
--       (column-name     dat√üa-type    NOT NULL,
--        column-name     data-type,
--        column-name     data-type    DEFAULT   default-value,
--        column-name     data-type    UNIQUE,
--        CONSTRAINT constraint-name PRIMARY KEY (column(s)-in-table),
--        CONSTRAINT constraint-name FOREIGN KEY(for-key-column(s)) REFERENCES parent-table(pri-key-column(s)),
--        CONSTRAINT consraint-name  CHECK (where-predicate)
--       )
--
--       Note: CONTRAINT is part of the set of column definitions (i.e. inside the parens for column specification)
--
-- 
-- ALTER - changing the definition of a table
--
-- Commonly used to add/remove constraints on tables or change existing table attributes
--
--
-- Add a FOREIGN KEY - Establish Parent/Dependant relationship
--
-- FOREIGN KEY must have the same-number, same-order, compatible-data-type as entire PRIMARY KEY of parent
--             and must have a matching value in the PRIMARY KEY in the parent table
--
-- When adding FOREIGN KEY after data has been loaded into table, all FOREIGN KEY values must have a match in parent
--
--      ALTER TABLE dependent-table-name ADD FOREIGN KEY(for-key-column(s)) REFERENCES parent-table(pri-key-column(s)) 
--
-- Remove a constraint from a table
--
--      ALTER TABLE table-name DROP CONSTRAINT constraint_name
--
--
-- Add a column to an existing table
--
-- Cannot add a NOT NULL column to a table with existing data
--
--      ALTER TABLE table-name ADD COLUMN new_column_name data_type constraint
--
--
-- Rename an existing column in a table
--
--      ALTER TABLE table-name RENAME column-name TO new-column-name;
--
--
-- Rename a table
--
--      ALTER TABLE table-name RENAME TO new-table-name  - Will fail if table does not exist
--
--      ALTER TABLE IF EXISTS table-name RENAME TO new-table-name  - Successful if table exists or not
--
---------------------------------------------------------------------------------------------------------------
--
-- Drop any tables weare creating in this SQL file
--
DROP TABLE if exists artists cascade;         -- Remove the Artist table from the database
DROP TABLE if exists paintings cascade;       -- Remove the Paintings table from the database
DROP TABLE if exists customers cascade;       -- Remove the customer table from the database
DROP TABLE if exists purchase cascade;        -- Remove the Purchase table from the database

                                              -- Create the Artist table
CREATE TABLE artists
(artist_id serial NOT NULL                    -- serial indicates an integer value generated by the database manager
, artist_name CHARACTER VARYING(50) NOT NULL  -- not null indicates a value for the column is required    
,CONSTRAINT pk_artists_artist_id PRIMARY KEY (artist_id)
);
                                              -- Create the Paintings table
CREATE TABLE paintings
(painting_id     serial
,artist_id      INT NOT NULL
,painting_title CHARACTER VARYING(100)
,CONSTRAINT pk_paintings_painting_id PRIMARY KEY (painting_id)
--                                        column-in-this-table            parent-table(primary-key-or-parent)
,CONSTRAINT fk_artists_artist_id FOREIGN KEY(artist_id) REFERENCES artists(artist_id)
);
                                              -- Create the Customer table
 CREATE TABLE customers
 (customer_id SERIAL
 ,customer_name CHARACTER VARYING(40)
 ,customer_address CHARACTER VARYING(100)
 ,customer_city CHARACTER VARYING(25)
 ,customer_state CHARACTER VARYING(2)         -- 2-char state code      
 ,customer_phone CHARACTER VARYING(12)        -- 330-555-1234 format
 ,customer_zipcode CHARACTER VARYING(5)
 );
                                              -- Create the purchase table
CREATE TABLE purchase
(purchase_id SERIAL
,customer_id INTEGER NOT NULL
,painting_id INTEGER NOT NULL
,purchase_date DATE NOT NULL
,purchase_price numeric (12,2)
,CONSTRAINT pk_purchase_purchase_id PRIMARY KEY(purchase_id)
);                                
 
 ALTER TABLE paintings            -- name of dependent tables that comprise the foreign key
 ADD FOREIGN KEY(artist_id)       -- column(s) in the dependent that comprise the foreign key
 REFERENCES artists(artist_id);   -- name of parent table & the primary key in that table
 
 ALTER TABLE purchase          
 ADD FOREIGN KEY(painting_id)     
 REFERENCES paintings(painting_id);